#!/bin/bash


# NOTE: these installation tests need a VM to run in that has:
#   apptainer installed
#   a SLURM cluster installed
#   an admin account (named by $admin_acct variable below)
#   a service account (named by $service_account variable below)
#   a folder to act as a shared folder root (named by $shareddir variable below)
#   a shared subfolder for the service account and the admin account
#   a folder to act as a local folder root (named by $localdir variable below)
#   filesystem access to the next run folder (named by $rundir variable below)
#   an operating-system folder to use for installations (named by $osdir variable below)

# settings
osdir=/opt
localdir=/scratch
shareddir=/nfs
service_acct=nextpyp
admin_acct=jeff
rundir=/media/next/run


# these tests need to be run as root inside the VM
if [ "$(whoami)" != "root" ]; then
  echo "Test must be run as root"
  exit 1
fi


appDaemon="nextPYP"

srvstop() {
  systemctl stop $appDaemon 2> /dev/null
}


clean() {

  echo "CLEAN"

  # move to a neutral cwd
  cd /

  # remove any systemd services
  srvstop
  rm "/lib/systemd/system/$appDaemon.service" 2> /dev/null
  systemctl daemon-reload

  # remove systemd logs too
  journalctl --rotate --vacuum-time=1s --unit=nextPYP > /dev/null 2> /dev/null

  # delete files
  # NOTE: use the :? parameter expansion to fail if the dir vars are empty, which would prevent deleting /* by mistake
  # NOTE: use 2> /dev/null to suppress useless errors from the log
  rm -rf "${osdir:?}"/* 2> /dev/null
  rm -rf "${localdir:?}"/* 2> /dev/null
  rm -rf "${shareddir:?}/${service_acct:?}"/* 2> /dev/null
  rm -rf "${shareddir:?}/${admin_acct:?}"/* 2> /dev/null
  rm "/usr/bin/"nextpyp* 2> /dev/null
  rm -rf "/home/${service_acct:?}" 2> /dev/null
}


run_test() { #(test_fn)
  clean
  echo
  echo "========="
  echo "  TEST:    $1"
  echo "========="
  $1
  clean
}


stacktrace() {
   local i=1 line file func
   while read -r line func file < <(caller $i); do
      echo " at $file:$line $func()"
      ((i++))
   done
}


fail() { #(msg)
  echo
  echo "******************"
  echo "** TEST FAILURE **  $1"
  echo "******************"
  stacktrace
  # actually, don't clean here, so we can investigate error messages
  #clean
  exit 1
}


assert_succeeded() { #(exit_code)
  if [ "$1" != 0 ]; then
    fail "command failed: code=$1"
  fi
}


assert_failed() { #(exit_code)
  if [ "$1" == 0 ]; then
    fail "command was supposed to fail, but didn't"
  fi
}


assert_install() {
  local exit
  cd / || fail
  echo "----- CHECK INSTALL -----"
  "$bindir/nextpyp" check
  exit=$?
  echo "-----      EXIT = $exit -----"
  assert_succeeded $exit
}


assert_owner() { #(path, owner)
  if [ ! -e "$1" ]; then
    fail "path does not exist: $1"
  fi
  obs="$(stat -c '%U' "$1")"
  if [ "$obs" != "$2" ]; then
    fail "$1 was supposed to be owned by $2, but instead is owned by $obs"
  fi
}


assert_link() { #(src, dst)
  if [ ! -L "$1" ]; then
    fail "path was not a symlink: $1"
  fi
  local target
  target=$(realpath "$1")
  if [ "$target" != "$2" ]; then
    fail "symlink target is $target, but it should be $2"
  fi
}


mkdir_owned() { # (path, username, groupname)
  local path username groupname
  path=$1
  username=$2
  if [ -n "$3" ]; then
    groupname=$3
  else
    groupname=$2
  fi
  mkdir "$path"
  chown "$username:$groupname" "$path"
}


mkdir_install_service() { # sets installdir
  installdir="$shareddir/$service_acct/test"
  sudo -u "$service_acct" mkdir -p "$installdir"
  cd "$installdir" || fail "failed to cd"
}


mkdir_install_root() { # sets installdir
  installdir="$osdir/nextpyp"
  mkdir -p "$installdir"
  cd "$installdir" || fail "failed to cd"
}


mkdir_install_admin() { # sets installdir
  installdir="$osdir/nextpyp"
  mkdir -p "$installdir"
  chown "$admin_acct:$admin_acct" "$installdir"
  cd "$installdir" || fail "failed to cd"
}


install() { #(acct, ...), sets install_exit, bindir

  local cmddo
  if [ "$1" = 'root' ]; then
    cmddo=
    bindir=/usr/bin
  else
    cmddo="sudo -u \"$1\""
    bindir="$installdir"
  fi
  shift

  # copy the install script to the install folder
  cd "$installdir" || fail "failed to cd"
  eval "$cmddo cp \"$rundir/install\" ./"
  eval "$cmddo chmod +x ./install"

  echo "----- INSTALL SCRIPT -----"
  eval "$cmddo PYP_DIST=\"$rundir\" $* \"./install\""
  install_exit=$?
  echo "-----       EXIT = $install_exit -----"
}


uninstall() { #(acct, ...), sets uninstall_exit

  local cmddo
  if [ "$1" = 'root' ]; then
    cmddo=
  else
    cmddo="sudo -u \"$1\""
  fi
  shift

  cd "$installdir" || fail "failed to cd"
  eval "$cmddo chmod +x ./uninstall"
  echo "----- UNINSTALL SCRIPT -----"
  eval "$cmddo ./uninstall"
  uninstall_exit=$?
  echo "-----         EXIT = $uninstall_exit -----"
}


#--------------
# INSTALL TESTS
#--------------


# install as root into folder owned by the service account
# should always fail with an error
test_install_as_root_folder_owned_by_service() {

  mkdir_install_service
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_folder_owned_by_root() {

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "root"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$installdir/sharedExec/containers/pyp.sif" "root"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_folder_owned_by_admin() {

  mkdir_install_admin
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "$admin_acct"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$installdir/sharedExec/containers/pyp.sif" "$admin_acct"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_with_local_owned_by_service() {

  # make a local folder owned by the service account
  local ldir
  ldir="$localdir/test"
  mkdir_owned "$ldir" "$service_acct"

  mkdir_install_root
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "root"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$ldir" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$ldir/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$installdir/sharedExec/containers/pyp.sif" "root"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_with_local_owned_by_root() {

  # make a local folder owned by root
  local ldir
  ldir="$localdir/test"
  mkdir_owned "$ldir" "root"

  mkdir_install_root
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$ldir" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_with_local_owned_by_admin() {

  # make a local folder owned by admin
  local ldir
  ldir="$localdir/test"
  mkdir_owned "$ldir" "$admin_acct"

  mkdir_install_root
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$ldir" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_with_shared_data_owned_by_service() {

  # make a shared data folder owned by the service account
  local sddir
  sddir="$shareddir/$service_acct/data"
  mkdir_owned "$sddir" "$service_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "root"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$sddir" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$sddir/log" "$service_acct"
  assert_owner "$installdir/sharedExec/containers/pyp.sif" "root"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_with_shared_data_owned_by_root() {

  # make a shared data folder owned by root
  local sddir
  sddir="$shareddir/$admin_acct/data"
  mkdir_owned "$sddir" "root"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$sddir" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_with_shared_data_owned_by_admin() {

  # make a shared data folder owned by the admin account
  local sddir
  sddir="$shareddir/$admin_acct/data"
  mkdir_owned "$sddir" "$admin_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$sddir" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_with_shared_exec_owned_by_service() {

  # make a shared exec folder owned by the service account
  local sedir
  sedir="$shareddir/$service_acct/exec"
  mkdir_owned "$sedir" "$service_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$sedir" \
    PYP_SCRATCH="$installdir/scratch"
  assert_failed $install_exit
}


test_install_as_root_with_shared_exec_owned_by_root() {

  # make a shared exec folder owned by root
  local sedir
  sedir="$shareddir/$admin_acct/exec"
  mkdir_owned "$sedir" "root"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$sedir" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$sedir/containers/pyp.sif" "root"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_with_shared_exec_owned_by_admin() {

  # make a shared exec folder owned by the admin account
  local sedir
  sedir="$shareddir/$admin_acct/exec"
  mkdir_owned "$sedir" "$admin_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$sedir" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$sedir/containers/pyp.sif" "$admin_acct"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_small_storage() {

  # make a shared exec folder owned by root
  local sdir
  sdir="$localdir/storage"
  mkdir_owned "$sdir" "$admin_acct"

  mkdir_install_root

  install "root" \
    PYP_USER="$service_acct" \
    PYP_STORAGE="$sdir"
  assert_failed $install_exit
}


test_install_as_root_stoage_owned_by_service() {

  # make a shared exec folder owned by the service account
  local sdir
  sdir="$localdir/storage"
  mkdir_owned "$sdir" "$service_acct"

  mkdir_install_root

  install "root" \
    PYP_USER="$service_acct" \
    PYP_STORAGE="$sdir"
  assert_failed $install_exit
}


test_install_as_root_stoage_owned_by_root() {

  # make a shared exec folder owned by root
  local sdir
  sdir="$localdir/storage"
  mkdir_owned "$sdir" "root"

  mkdir_install_root

  install "root" \
    PYP_USER="$service_acct" \
    PYP_STORAGE="$sdir" \
    PYP_STORAGE_OK=true
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$sdir/local/logs" "$service_acct"
  assert_owner "$sdir/shared/log" "$service_acct"
  assert_owner "$sdir/sharedExec/containers/pyp.sif" "root"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_root_stoage_owned_by_admin() {

  # make a shared exec folder owned by the admin account
  local sdir
  sdir="$localdir/storage"
  mkdir_owned "$sdir" "$admin_acct"

  mkdir_install_root

  install "root" \
    PYP_USER="$service_acct" \
    PYP_STORAGE="$sdir" \
    PYP_STORAGE_OK=true
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$sdir/local/logs" "$service_acct"
  assert_owner "$sdir/shared/log" "$service_acct"
  assert_owner "$sdir/sharedExec/containers/pyp.sif" "$admin_acct"

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_install_as_service_small_storage() {

  mkdir_install_service

  install "$service_acct"
  assert_failed $install_exit
}


test_install_as_service() {

  mkdir_install_service

  install "$service_acct" PYP_STORAGE_OK=true
  assert_succeeded $install_exit
  assert_install
  assert_owner "$installdir/nextPYP.sif" "$service_acct"
  assert_owner "$installdir/local/logs" "$service_acct"
  assert_owner "$installdir/shared/log" "$service_acct"
  assert_owner "$installdir/sharedExec/containers/pyp.sif" "$service_acct"

  uninstall "$service_acct"
  assert_succeeded $uninstall_exit
}


#--------------
# UPGRADE TESTS
#--------------


test_upgrade_as_root_folder_owned_by_root() {

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "root"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_root_folder_owned_by_admin() {

  mkdir_install_admin
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_root_with_local() {

  # make a local folder owned by the service account
  local ldir
  ldir="$localdir/test"
  mkdir_owned "$ldir" "$service_acct"

  mkdir_install_root
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$ldir" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_root_with_shared_data() {

  # make a shared data folder owned by the service account
  local sddir
  sddir="$shareddir/$service_acct/data"
  mkdir_owned "$sddir" "$service_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/sharedExec" "$admin_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$sddir" \
    PYP_SHARED_EXEC="$installdir/sharedExec" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_root_with_shared_exec_owned_by_root() {

  # make a shared exec folder owned by root
  local sedir
  sedir="$shareddir/$admin_acct/exec"
  mkdir_owned "$sedir" "root"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$sedir" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_root_with_shared_exec_owned_by_admin() {

  # make a shared exec folder owned by the admin account
  local sedir
  sedir="$shareddir/$admin_acct/exec"
  mkdir_owned "$sedir" "$admin_acct"

  mkdir_install_root
  mkdir_owned "$installdir/local" "$service_acct"
  mkdir_owned "$installdir/shared" "$service_acct"
  mkdir_owned "$installdir/scratch" "$service_acct"

  install "root" \
    PYP_USER="$service_acct" \
    PYP_LOCAL="$installdir/local" \
    PYP_SHARED_DATA="$installdir/shared" \
    PYP_SHARED_EXEC="$sedir" \
    PYP_SCRATCH="$installdir/scratch"
  assert_succeeded $install_exit
  srvstop

  install "root"
  assert_succeeded $install_exit
  assert_install

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_as_service() {

  mkdir_install_service

  install "$service_acct" PYP_STORAGE_OK=true
  assert_succeeded $install_exit
  srvstop

  install "$service_acct"
  assert_succeeded $install_exit
  assert_install

  uninstall "$service_acct"
  assert_succeeded $uninstall_exit
}


# ----------------
# VERSION UTILITES
# ----------------


build_installed_v6.5() { #(acct, ldir, sdir)

  # build an install folder that looks like a v6.5 install

  acctDo=()
  if [ "$1" != "root" ]; then
    acctDo=(sudo -u "$1")
  fi

  # make the container files
  "${acctDo[@]}" touch "$installdir/nextPYP.sif" || fail
  "${acctDo[@]}" touch "$installdir/pyp.sif" || fail

  # make the config file
  local configpath
  configpath="$installdir/config.toml"
  cat - > "$configpath" << EOF

[pyp]
container = '$installdir/pyp.sif'
scratch = '/tmp/pyp'

[web]
localDir = '$2'
sharedDir = '$3'
auth = "none"

EOF
  chown "$1:$1" "$configpath" || fail
}


#----------------------
# UPGRADE VERSION TESTS
#----------------------


test_upgrade_from_v6.5_as_root_here_folders() {

  mkdir_install_root

  # make the local,shared folders in the install folder
  # that was the default configuration in v6.5

  local ldir
  ldir="$installdir/local"
  mkdir_owned "$ldir" "$service_acct" || fail

  local sdir
  sddir="$installdir/shared"
  mkdir_owned "$sddir" "$service_acct" || fail

  build_installed_v6.5 "root" "$ldir" "$sddir"

  # manual pre-upgrade steps
  local sedir
  sedir="$installdir/sharedExec"
  mkdir_owned "$sedir" "root"

  install "root" \
    PYP_SHARED_EXEC="$sedir"
  assert_succeeded $install_exit

  # make sure the config file got moved
  assert_link "$installdir/config.toml" "$sedir/config.toml"
  assert_owner "$sedir/config.toml" "root"

  # manual post-upgrade steps
  rm "$installdir/pyp.sif" || fail
  echo "sharedExecDir = \"$sedir\"" >> "$sedir/config.toml"

  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$ldir/logs" "$service_acct"
  assert_owner "$sddir/log" "$service_acct"
  assert_owner "$sedir/containers/pyp.sif" "root"

  # now try to start
  systemctl start nextPYP || fail

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_from_v6.5_as_root_not_here_folders() {

  mkdir_install_root

  # make the local,shared folders outside the install folder
  # to simulate a customized configuration

  local ldir
  ldir="$localdir/test"
  mkdir_owned "$ldir" "$service_acct" || fail

  local sdir
  sddir="$shareddir/$service_acct/shared"
  mkdir_owned "$sddir" "$service_acct" || fail

  build_installed_v6.5 "root" "$ldir" "$sddir"

  # manual pre-upgrade steps
  local sedir
  sedir="$installdir/sharedExec"
  mkdir_owned "$sedir" "root"
  ln -s "$ldir" "$installdir/local"
  ln -s "$sddir" "$installdir/shared"

  install "root" \
    PYP_SHARED_EXEC="$sedir"
  assert_succeeded $install_exit

  # make sure the config file got moved
  assert_link "$installdir/config.toml" "$sedir/config.toml"
  assert_owner "$sedir/config.toml" "root"

  # manual post-upgrade steps
  rm "$installdir/pyp.sif" || fail
  echo "sharedExecDir = '$sedir'" >> "$sedir/config.toml"

  assert_install
  assert_owner "$installdir/nextPYP.sif" "root"
  assert_owner "$ldir/logs" "$service_acct"
  assert_owner "$sddir/log" "$service_acct"
  assert_owner "$sedir/containers/pyp.sif" "root"

  # now try to start
  systemctl start nextPYP || fail

  uninstall "root"
  assert_succeeded $uninstall_exit
}


test_upgrade_from_v6.5_as_service() {

  mkdir_install_service

  # make the local,shared folders in the install folder
  # that was only configuration in v0.6.5 for user mode

  local ldir
  ldir="$installdir/local"
  mkdir_owned "$ldir" "$service_acct" || fail

  local sdir
  sddir="$installdir/shared"
  mkdir_owned "$sddir" "$service_acct" || fail

  build_installed_v6.5 "$service_acct" "$ldir" "$sddir"

  # no pre-upgrade steps needed here

  install "$service_acct"
  assert_succeeded $install_exit

  # make sure the config file got moved
  sedir="$installdir/sharedExec"
  assert_link "$installdir/config.toml" "$sedir/config.toml"
  assert_owner "$sedir/config.toml" "$service_acct"

  # post-upgrade steps
  rm "$installdir/pyp.sif" || fail
  echo "sharedExecDir = \"$sedir\"" >> "$sedir/config.toml"

  assert_install

  uninstall "$service_acct"
  assert_succeeded $uninstall_exit
}


# run all the tests
echo "Running tests..."

# installation tests
run_test "test_install_as_root_folder_owned_by_service"
run_test "test_install_as_root_folder_owned_by_root"
run_test "test_install_as_root_folder_owned_by_admin"
run_test "test_install_as_root_with_local_owned_by_service"
run_test "test_install_as_root_with_local_owned_by_root"
run_test "test_install_as_root_with_local_owned_by_admin"
run_test "test_install_as_root_with_shared_data_owned_by_service"
run_test "test_install_as_root_with_shared_data_owned_by_root"
run_test "test_install_as_root_with_shared_data_owned_by_admin"
run_test "test_install_as_root_with_shared_exec_owned_by_service"
run_test "test_install_as_root_with_shared_exec_owned_by_admin"
run_test "test_install_as_root_with_shared_exec_owned_by_root"
run_test "test_install_as_root_small_storage"
run_test "test_install_as_root_stoage_owned_by_service"
run_test "test_install_as_root_stoage_owned_by_root"
run_test "test_install_as_root_stoage_owned_by_admin"

run_test "test_install_as_service_small_storage"
run_test "test_install_as_service"

# upgrade tests
run_test "test_upgrade_as_root_folder_owned_by_root"
run_test "test_upgrade_as_root_folder_owned_by_admin"
run_test "test_upgrade_as_root_with_local"
run_test "test_upgrade_as_root_with_shared_data"
run_test "test_upgrade_as_root_with_shared_exec_owned_by_root"
run_test "test_upgrade_as_root_with_shared_exec_owned_by_admin"
run_test "test_upgrade_as_service"

# upgrades from specific versions
run_test "test_upgrade_from_v6.5_as_root_here_folders"
run_test "test_upgrade_from_v6.5_as_root_not_here_folders"
run_test "test_upgrade_from_v6.5_as_service"


echo "Testing completed successfully! =D =D =D"
